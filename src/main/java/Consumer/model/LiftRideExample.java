package Consumer.model;

import java.util.ArrayList;
import java.util.List;

public class LiftRideExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    public LiftRideExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLiftrideIdIsNull() {
            addCriterion("liftride_id is null");
            return (Criteria) this;
        }

        public Criteria andLiftrideIdIsNotNull() {
            addCriterion("liftride_id is not null");
            return (Criteria) this;
        }

        public Criteria andLiftrideIdEqualTo(Integer value) {
            addCriterion("liftride_id =", value, "liftrideId");
            return (Criteria) this;
        }

        public Criteria andLiftrideIdNotEqualTo(Integer value) {
            addCriterion("liftride_id <>", value, "liftrideId");
            return (Criteria) this;
        }

        public Criteria andLiftrideIdGreaterThan(Integer value) {
            addCriterion("liftride_id >", value, "liftrideId");
            return (Criteria) this;
        }

        public Criteria andLiftrideIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("liftride_id >=", value, "liftrideId");
            return (Criteria) this;
        }

        public Criteria andLiftrideIdLessThan(Integer value) {
            addCriterion("liftride_id <", value, "liftrideId");
            return (Criteria) this;
        }

        public Criteria andLiftrideIdLessThanOrEqualTo(Integer value) {
            addCriterion("liftride_id <=", value, "liftrideId");
            return (Criteria) this;
        }

        public Criteria andLiftrideIdIn(List<Integer> values) {
            addCriterion("liftride_id in", values, "liftrideId");
            return (Criteria) this;
        }

        public Criteria andLiftrideIdNotIn(List<Integer> values) {
            addCriterion("liftride_id not in", values, "liftrideId");
            return (Criteria) this;
        }

        public Criteria andLiftrideIdBetween(Integer value1, Integer value2) {
            addCriterion("liftride_id between", value1, value2, "liftrideId");
            return (Criteria) this;
        }

        public Criteria andLiftrideIdNotBetween(Integer value1, Integer value2) {
            addCriterion("liftride_id not between", value1, value2, "liftrideId");
            return (Criteria) this;
        }

        public Criteria andSkierIdIsNull() {
            addCriterion("skier_id is null");
            return (Criteria) this;
        }

        public Criteria andSkierIdIsNotNull() {
            addCriterion("skier_id is not null");
            return (Criteria) this;
        }

        public Criteria andSkierIdEqualTo(Integer value) {
            addCriterion("skier_id =", value, "skierId");
            return (Criteria) this;
        }

        public Criteria andSkierIdNotEqualTo(Integer value) {
            addCriterion("skier_id <>", value, "skierId");
            return (Criteria) this;
        }

        public Criteria andSkierIdGreaterThan(Integer value) {
            addCriterion("skier_id >", value, "skierId");
            return (Criteria) this;
        }

        public Criteria andSkierIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("skier_id >=", value, "skierId");
            return (Criteria) this;
        }

        public Criteria andSkierIdLessThan(Integer value) {
            addCriterion("skier_id <", value, "skierId");
            return (Criteria) this;
        }

        public Criteria andSkierIdLessThanOrEqualTo(Integer value) {
            addCriterion("skier_id <=", value, "skierId");
            return (Criteria) this;
        }

        public Criteria andSkierIdIn(List<Integer> values) {
            addCriterion("skier_id in", values, "skierId");
            return (Criteria) this;
        }

        public Criteria andSkierIdNotIn(List<Integer> values) {
            addCriterion("skier_id not in", values, "skierId");
            return (Criteria) this;
        }

        public Criteria andSkierIdBetween(Integer value1, Integer value2) {
            addCriterion("skier_id between", value1, value2, "skierId");
            return (Criteria) this;
        }

        public Criteria andSkierIdNotBetween(Integer value1, Integer value2) {
            addCriterion("skier_id not between", value1, value2, "skierId");
            return (Criteria) this;
        }

        public Criteria andResortIdIsNull() {
            addCriterion("resort_id is null");
            return (Criteria) this;
        }

        public Criteria andResortIdIsNotNull() {
            addCriterion("resort_id is not null");
            return (Criteria) this;
        }

        public Criteria andResortIdEqualTo(Integer value) {
            addCriterion("resort_id =", value, "resortId");
            return (Criteria) this;
        }

        public Criteria andResortIdNotEqualTo(Integer value) {
            addCriterion("resort_id <>", value, "resortId");
            return (Criteria) this;
        }

        public Criteria andResortIdGreaterThan(Integer value) {
            addCriterion("resort_id >", value, "resortId");
            return (Criteria) this;
        }

        public Criteria andResortIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("resort_id >=", value, "resortId");
            return (Criteria) this;
        }

        public Criteria andResortIdLessThan(Integer value) {
            addCriterion("resort_id <", value, "resortId");
            return (Criteria) this;
        }

        public Criteria andResortIdLessThanOrEqualTo(Integer value) {
            addCriterion("resort_id <=", value, "resortId");
            return (Criteria) this;
        }

        public Criteria andResortIdIn(List<Integer> values) {
            addCriterion("resort_id in", values, "resortId");
            return (Criteria) this;
        }

        public Criteria andResortIdNotIn(List<Integer> values) {
            addCriterion("resort_id not in", values, "resortId");
            return (Criteria) this;
        }

        public Criteria andResortIdBetween(Integer value1, Integer value2) {
            addCriterion("resort_id between", value1, value2, "resortId");
            return (Criteria) this;
        }

        public Criteria andResortIdNotBetween(Integer value1, Integer value2) {
            addCriterion("resort_id not between", value1, value2, "resortId");
            return (Criteria) this;
        }

        public Criteria andLiftIdIsNull() {
            addCriterion("lift_id is null");
            return (Criteria) this;
        }

        public Criteria andLiftIdIsNotNull() {
            addCriterion("lift_id is not null");
            return (Criteria) this;
        }

        public Criteria andLiftIdEqualTo(Integer value) {
            addCriterion("lift_id =", value, "liftId");
            return (Criteria) this;
        }

        public Criteria andLiftIdNotEqualTo(Integer value) {
            addCriterion("lift_id <>", value, "liftId");
            return (Criteria) this;
        }

        public Criteria andLiftIdGreaterThan(Integer value) {
            addCriterion("lift_id >", value, "liftId");
            return (Criteria) this;
        }

        public Criteria andLiftIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("lift_id >=", value, "liftId");
            return (Criteria) this;
        }

        public Criteria andLiftIdLessThan(Integer value) {
            addCriterion("lift_id <", value, "liftId");
            return (Criteria) this;
        }

        public Criteria andLiftIdLessThanOrEqualTo(Integer value) {
            addCriterion("lift_id <=", value, "liftId");
            return (Criteria) this;
        }

        public Criteria andLiftIdIn(List<Integer> values) {
            addCriterion("lift_id in", values, "liftId");
            return (Criteria) this;
        }

        public Criteria andLiftIdNotIn(List<Integer> values) {
            addCriterion("lift_id not in", values, "liftId");
            return (Criteria) this;
        }

        public Criteria andLiftIdBetween(Integer value1, Integer value2) {
            addCriterion("lift_id between", value1, value2, "liftId");
            return (Criteria) this;
        }

        public Criteria andLiftIdNotBetween(Integer value1, Integer value2) {
            addCriterion("lift_id not between", value1, value2, "liftId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdIsNull() {
            addCriterion("season_id is null");
            return (Criteria) this;
        }

        public Criteria andSeasonIdIsNotNull() {
            addCriterion("season_id is not null");
            return (Criteria) this;
        }

        public Criteria andSeasonIdEqualTo(Integer value) {
            addCriterion("season_id =", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdNotEqualTo(Integer value) {
            addCriterion("season_id <>", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdGreaterThan(Integer value) {
            addCriterion("season_id >", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("season_id >=", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdLessThan(Integer value) {
            addCriterion("season_id <", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdLessThanOrEqualTo(Integer value) {
            addCriterion("season_id <=", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdIn(List<Integer> values) {
            addCriterion("season_id in", values, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdNotIn(List<Integer> values) {
            addCriterion("season_id not in", values, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdBetween(Integer value1, Integer value2) {
            addCriterion("season_id between", value1, value2, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdNotBetween(Integer value1, Integer value2) {
            addCriterion("season_id not between", value1, value2, "seasonId");
            return (Criteria) this;
        }

        public Criteria andDayIdIsNull() {
            addCriterion("day_id is null");
            return (Criteria) this;
        }

        public Criteria andDayIdIsNotNull() {
            addCriterion("day_id is not null");
            return (Criteria) this;
        }

        public Criteria andDayIdEqualTo(Integer value) {
            addCriterion("day_id =", value, "dayId");
            return (Criteria) this;
        }

        public Criteria andDayIdNotEqualTo(Integer value) {
            addCriterion("day_id <>", value, "dayId");
            return (Criteria) this;
        }

        public Criteria andDayIdGreaterThan(Integer value) {
            addCriterion("day_id >", value, "dayId");
            return (Criteria) this;
        }

        public Criteria andDayIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("day_id >=", value, "dayId");
            return (Criteria) this;
        }

        public Criteria andDayIdLessThan(Integer value) {
            addCriterion("day_id <", value, "dayId");
            return (Criteria) this;
        }

        public Criteria andDayIdLessThanOrEqualTo(Integer value) {
            addCriterion("day_id <=", value, "dayId");
            return (Criteria) this;
        }

        public Criteria andDayIdIn(List<Integer> values) {
            addCriterion("day_id in", values, "dayId");
            return (Criteria) this;
        }

        public Criteria andDayIdNotIn(List<Integer> values) {
            addCriterion("day_id not in", values, "dayId");
            return (Criteria) this;
        }

        public Criteria andDayIdBetween(Integer value1, Integer value2) {
            addCriterion("day_id between", value1, value2, "dayId");
            return (Criteria) this;
        }

        public Criteria andDayIdNotBetween(Integer value1, Integer value2) {
            addCriterion("day_id not between", value1, value2, "dayId");
            return (Criteria) this;
        }

        public Criteria andTimeIsNull() {
            addCriterion("time is null");
            return (Criteria) this;
        }

        public Criteria andTimeIsNotNull() {
            addCriterion("time is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEqualTo(Integer value) {
            addCriterion("time =", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotEqualTo(Integer value) {
            addCriterion("time <>", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThan(Integer value) {
            addCriterion("time >", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("time >=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThan(Integer value) {
            addCriterion("time <", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThanOrEqualTo(Integer value) {
            addCriterion("time <=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeIn(List<Integer> values) {
            addCriterion("time in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotIn(List<Integer> values) {
            addCriterion("time not in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeBetween(Integer value1, Integer value2) {
            addCriterion("time between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("time not between", value1, value2, "time");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table liftride
     *
     * @mbg.generated do_not_delete_during_merge Thu Mar 28 16:01:19 CST 2024
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table liftride
     *
     * @mbg.generated Thu Mar 28 16:01:19 CST 2024
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}